# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Results(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, result: float=None, input: str=None):  # noqa: E501
        """Results - a model defined in Swagger

        :param result: The result of this Results.  # noqa: E501
        :type result: float
        :param input: The input of this Results.  # noqa: E501
        :type input: str
        """
        self.swagger_types = {
            'result': float,
            'input': str
        }

        self.attribute_map = {
            'result': 'result',
            'input': 'input'
        }

        self._result = result
        self._input = input

    @classmethod
    def from_dict(cls, dikt) -> 'Results':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Results of this Results.  # noqa: E501
        :rtype: Results
        """
        return util.deserialize_model(dikt, cls)

    @property
    def result(self) -> float:
        """Gets the result of this Results.


        :return: The result of this Results.
        :rtype: float
        """
        return self._result

    @result.setter
    def result(self, result: float):
        """Sets the result of this Results.


        :param result: The result of this Results.
        :type result: float
        """

        self._result = result

    @property
    def input(self) -> str:
        """Gets the input of this Results.


        :return: The input of this Results.
        :rtype: str
        """
        return self._input

    @input.setter
    def input(self, input: str):
        """Sets the input of this Results.


        :param input: The input of this Results.
        :type input: str
        """

        self._input = input
